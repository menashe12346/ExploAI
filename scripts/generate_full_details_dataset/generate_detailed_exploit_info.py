import pandas as pd
import json
import os
import time

# נתיבי קבצים
EXPLOIT_CSV_PATH = "/home/menashe/cyber_ai_project/datasets/exploits/exploitdb/exploit_directory_with_id.csv"
CVE_JSON_PATH = "/home/menashe/cyber_ai_project/datasets/cve/cve_data/all_cves_combined.json"
OUTPUT_CSV_PATH = "/home/menashe/cyber_ai_project/datasets/exploits/exploitdb/exploit_directory_detailed.csv"

# טען את קובץ ה-CSV
print("📂 טוען את קובץ ה-Exploit...")
df_exploits = pd.read_csv(EXPLOIT_CSV_PATH)
print(f"✅ נטענו {len(df_exploits)} Exploits מ-{EXPLOIT_CSV_PATH}\n")

# טען את קובץ ה-JSON
print("📂 טוען את קובץ ה-CVE JSON...")
with open(CVE_JSON_PATH, "r") as f:
    cve_data = json.load(f)
print(f"✅ נטענו {len(cve_data)} רשומות CVE מ-{CVE_JSON_PATH}\n")

# צור מילון מהיר: מיפוי CVE-ID → רשומת JSON
print("⚙️ יוצר מיפוי CVE-ID ↔ רשומה...")
cve_dict = {entry["cve"]["CVE_data_meta"]["ID"]: entry for entry in cve_data}
print("✅ מיפוי נוצר בהצלחה!\n")

# פונקציה לשליפת מידע מתוך רשומת CVE
def extract_info(cve_id):
    if cve_id.lower() == "no cve":
        return {"description": "N/A", "severity": "N/A", "publishedDate": "N/A", "references": "N/A"}

    cve = cve_dict.get(cve_id)
    if not cve:
        return {"description": "Not Found", "severity": "Unknown", "publishedDate": "Unknown", "references": "None"}
    
    # תיאור
    desc = cve.get("cve", {}).get("description", {}).get("description_data", [])
    description = next((d["value"] for d in desc if d["lang"] == "en"), "No description found")

    # תאריך פרסום
    published = cve.get("publishedDate", "Unknown")

    # חומרה
    severity = cve.get("impact", {}).get("baseMetricV2", {}).get("severity", "Unknown")

    # רשימת קישורים
    references = cve.get("cve", {}).get("references", {}).get("reference_data", [])
    urls = [ref.get("url", "") for ref in references]
    references_str = "; ".join(urls) if urls else "None"

    return {
        "description": description,
        "severity": severity,
        "publishedDate": published,
        "references": references_str
    }

# איסוף המידע לכל exploit
print("🚀 מתחיל איסוף מידע...")
start_time = time.time()
detailed_data = []
total = len(df_exploits)

for idx, row in df_exploits.iterrows():
    exploit_path = row["exploit_path"]
    cve_id = row["cve"]

    remaining = total - (idx + 1)
    percent = round(((idx + 1) / total) * 100, 2)

    print(f"[{idx+1}/{total} | {percent}%] 📁 עובד על: {exploit_path} (CVE: {cve_id}) | נותרו: {remaining}")

    info = extract_info(cve_id)
    detailed_data.append({
        "exploit_path": exploit_path,
        "cve": cve_id,
        "description": info["description"],
        "severity": info["severity"],
        "published_date": info["publishedDate"],
        "references": info["references"]
    })

# המרה ל-DataFrame ושמירה לקובץ חדש
print("\n💾 שומר את התוצאה לקובץ CSV...")
df_detailed = pd.DataFrame(detailed_data)
df_detailed.to_csv(OUTPUT_CSV_PATH, index=False, encoding="utf-8")
elapsed = round(time.time() - start_time, 2)

print(f"\n✅ הקובץ נשמר בהצלחה: {OUTPUT_CSV_PATH}")
print(f"⏱️ זמן ריצה כולל: {elapsed} שניות.")
