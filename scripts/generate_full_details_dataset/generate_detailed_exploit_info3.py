import pandas as pd

# טען את הקובץ הקיים עם כל העמודות
INPUT_CSV = "/home/menashe/cyber_ai_project/datasets/exploits/exploitdb/exploit_directory_extended.csv"
OUTPUT_CSV = "/home/menashe/cyber_ai_project/datasets/exploits/exploitdb/exploit_v1.csv"

# טען את הנתונים
df = pd.read_csv(INPUT_CSV)

# פונקציה לחילוץ סוג הפגיעות לפי מילות מפתח בתיאור
def classify_vulnerability(description):
    if pd.isna(description):
        return "Unknown"
    desc = description.lower()
    if "sql" in desc and "injection" in desc:
        return "SQL Injection"
    elif "xss" in desc or "cross-site scripting" in desc:
        return "Cross-Site Scripting (XSS)"
    elif "overflow" in desc:
        return "Buffer Overflow"
    elif "directory traversal" in desc or "../" in desc:
        return "Directory Traversal"
    elif "csrf" in desc or "cross-site request forgery" in desc:
        return "CSRF"
    elif "rce" in desc or "remote code execution" in desc:
        return "Remote Code Execution"
    elif "lfi" in desc or "local file inclusion" in desc:
        return "Local File Inclusion (LFI)"
    elif "rfi" in desc or "remote file inclusion" in desc:
        return "Remote File Inclusion (RFI)"
    elif "privilege escalation" in desc:
        return "Privilege Escalation"
    elif "authentication bypass" in desc or "unauthenticated" in desc:
        return "Authentication Bypass"
    elif "code injection" in desc:
        return "Code Injection"
    elif "deserialization" in desc:
        return "Insecure Deserialization"
    elif "hardcoded credentials" in desc:
        return "Hardcoded Credentials"
    else:
        return "Other"

# הוסף את העמודה החדשה
df["vulnerability_class"] = df["description"].apply(classify_vulnerability)

# שמור את הקובץ החדש
df.to_csv(OUTPUT_CSV, index=False, encoding="utf-8")
